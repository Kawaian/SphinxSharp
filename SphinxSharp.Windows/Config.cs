//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Pocketsphinx {

public class Config : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Config(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Config obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Config() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          sphinxbasePINVOKE.delete_Config(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public void set_boolean(string key, bool val) {
    sphinxbasePINVOKE.Config_set_boolean(swigCPtr, key, val);
  }

  public void set_int(string key, int val) {
    sphinxbasePINVOKE.Config_set_int(swigCPtr, key, val);
  }

  public void set_float(string key, double val) {
    sphinxbasePINVOKE.Config_set_float(swigCPtr, key, val);
  }

  public void set_string(string key, string val) {
    sphinxbasePINVOKE.Config_set_string(swigCPtr, key, val);
  }

  public void set_string_extra(string key, string val) {
    sphinxbasePINVOKE.Config_set_string_extra(swigCPtr, key, val);
  }

  public bool exists(string key) {
    bool ret = sphinxbasePINVOKE.Config_exists(swigCPtr, key);
    return ret;
  }

  public bool get_boolean(string key) {
    bool ret = sphinxbasePINVOKE.Config_get_boolean(swigCPtr, key);
    return ret;
  }

  public int get_int(string key) {
    int ret = sphinxbasePINVOKE.Config_get_int(swigCPtr, key);
    return ret;
  }

  public double get_float(string key) {
    double ret = sphinxbasePINVOKE.Config_get_float(swigCPtr, key);
    return ret;
  }

  public string get_string(string key) {
    string ret = sphinxbasePINVOKE.Config_get_string(swigCPtr, key);
    return ret;
  }

}

}
