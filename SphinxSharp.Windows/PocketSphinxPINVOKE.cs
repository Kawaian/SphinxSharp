//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Pocketsphinx {

class PocketSphinxPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="SWIGRegisterExceptionCallbacks_PocketSphinx")]
    public static extern void SWIGRegisterExceptionCallbacks_PocketSphinx(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_PocketSphinx")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_PocketSphinx(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_PocketSphinx(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_PocketSphinx(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(PocketSphinxPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(PocketSphinxPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="SWIGRegisterStringCallback_PocketSphinx")]
    public static extern void SWIGRegisterStringCallback_PocketSphinx(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_PocketSphinx(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static PocketSphinxPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Hypothesis_hypstr_set")]
  public static extern void Hypothesis_hypstr_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Hypothesis_hypstr_get")]
  public static extern string Hypothesis_hypstr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Hypothesis_best_score_set")]
  public static extern void Hypothesis_best_score_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Hypothesis_best_score_get")]
  public static extern int Hypothesis_best_score_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Hypothesis_prob_set")]
  public static extern void Hypothesis_prob_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Hypothesis_prob_get")]
  public static extern int Hypothesis_prob_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_Hypothesis")]
  public static extern global::System.IntPtr new_Hypothesis(string jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_Hypothesis")]
  public static extern void delete_Hypothesis(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_word_set")]
  public static extern void Segment_word_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_word_get")]
  public static extern string Segment_word_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_ascore_set")]
  public static extern void Segment_ascore_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_ascore_get")]
  public static extern int Segment_ascore_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_lscore_set")]
  public static extern void Segment_lscore_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_lscore_get")]
  public static extern int Segment_lscore_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_lback_set")]
  public static extern void Segment_lback_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_lback_get")]
  public static extern int Segment_lback_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_prob_set")]
  public static extern void Segment_prob_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_prob_get")]
  public static extern int Segment_prob_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_start_frame_set")]
  public static extern void Segment_start_frame_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_start_frame_get")]
  public static extern int Segment_start_frame_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_end_frame_set")]
  public static extern void Segment_end_frame_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_end_frame_get")]
  public static extern int Segment_end_frame_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Segment_fromIter")]
  public static extern global::System.IntPtr Segment_fromIter(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_Segment")]
  public static extern void delete_Segment(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_Segment")]
  public static extern global::System.IntPtr new_Segment();

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBest_hypstr_set")]
  public static extern void NBest_hypstr_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBest_hypstr_get")]
  public static extern string NBest_hypstr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBest_score_set")]
  public static extern void NBest_score_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBest_score_get")]
  public static extern int NBest_score_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBest_fromIter")]
  public static extern global::System.IntPtr NBest_fromIter(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBest_hyp")]
  public static extern global::System.IntPtr NBest_hyp(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_NBest")]
  public static extern void delete_NBest(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_NBest")]
  public static extern global::System.IntPtr new_NBest();

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_SegmentIterator_ptr_set")]
  public static extern void SegmentIterator_ptr_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_SegmentIterator_ptr_get")]
  public static extern global::System.IntPtr SegmentIterator_ptr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_SegmentIterator")]
  public static extern global::System.IntPtr new_SegmentIterator(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_SegmentIterator")]
  public static extern void delete_SegmentIterator(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBestIterator_ptr_set")]
  public static extern void NBestIterator_ptr_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBestIterator_ptr_get")]
  public static extern global::System.IntPtr NBestIterator_ptr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_NBestIterator")]
  public static extern global::System.IntPtr new_NBestIterator(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_NBestIterator")]
  public static extern void delete_NBestIterator(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_Decoder__SWIG_0")]
  public static extern global::System.IntPtr new_Decoder__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_Decoder__SWIG_1")]
  public static extern global::System.IntPtr new_Decoder__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_Decoder")]
  public static extern void delete_Decoder(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_reinit")]
  public static extern void Decoder_reinit(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_load_dict")]
  public static extern void Decoder_load_dict(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_save_dict")]
  public static extern void Decoder_save_dict(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_add_word")]
  public static extern void Decoder_add_word(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_lookup_word")]
  public static extern string Decoder_lookup_word(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_lattice")]
  public static extern global::System.IntPtr Decoder_get_lattice(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_config")]
  public static extern global::System.IntPtr Decoder_get_config(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_default_config")]
  public static extern global::System.IntPtr Decoder_default_config();

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_file_config")]
  public static extern global::System.IntPtr Decoder_file_config(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_start_stream")]
  public static extern void Decoder_start_stream(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_start_utt")]
  public static extern void Decoder_start_utt(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_end_utt")]
  public static extern void Decoder_end_utt(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_process_raw")]
  public static extern int Decoder_process_raw(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, bool jarg4, bool jarg5);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_hyp")]
  public static extern global::System.IntPtr Decoder_hyp(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_fe")]
  public static extern global::System.IntPtr Decoder_get_fe(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_feat")]
  public static extern global::System.IntPtr Decoder_get_feat(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_in_speech")]
  public static extern bool Decoder_get_in_speech(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_fsg")]
  public static extern global::System.IntPtr Decoder_get_fsg(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_fsg")]
  public static extern void Decoder_set_fsg(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_jsgf_file")]
  public static extern void Decoder_set_jsgf_file(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_jsgf_string")]
  public static extern void Decoder_set_jsgf_string(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_kws")]
  public static extern string Decoder_get_kws(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_kws")]
  public static extern void Decoder_set_kws(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_keyphrase")]
  public static extern void Decoder_set_keyphrase(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_allphone_file")]
  public static extern void Decoder_set_allphone_file(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_lm")]
  public static extern global::System.IntPtr Decoder_get_lm(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_lm")]
  public static extern void Decoder_set_lm(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_lm_file")]
  public static extern void Decoder_set_lm_file(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_logmath")]
  public static extern global::System.IntPtr Decoder_get_logmath(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_set_search")]
  public static extern void Decoder_set_search(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_unset_search")]
  public static extern void Decoder_unset_search(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_get_search")]
  public static extern string Decoder_get_search(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_n_frames")]
  public static extern int Decoder_n_frames(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_seg")]
  public static extern global::System.IntPtr Decoder_seg(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Decoder_nbest")]
  public static extern global::System.IntPtr Decoder_nbest(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_Lattice__SWIG_0")]
  public static extern global::System.IntPtr new_Lattice__SWIG_0(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_new_Lattice__SWIG_1")]
  public static extern global::System.IntPtr new_Lattice__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_Lattice")]
  public static extern void delete_Lattice(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Lattice_write")]
  public static extern void Lattice_write(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_Lattice_write_htk")]
  public static extern void Lattice_write_htk(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_NBestList___iter__")]
  public static extern global::System.IntPtr NBestList___iter__(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_NBestList")]
  public static extern void delete_NBestList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_SegmentList___iter__")]
  public static extern global::System.IntPtr SegmentList___iter__(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("SphinxWrap.dll", EntryPoint="CSharp_Pocketsphinx_delete_SegmentList")]
  public static extern void delete_SegmentList(global::System.Runtime.InteropServices.HandleRef jarg1);
}

}
